
version: 2
jobs:
  node:
    working_directory: ~/demo-react-native
    docker:
      - image: circleci/node:8
    steps:
      - checkout

      - restore_cache:
          key: node-v1-{{ checksum "package.lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.lock.json" }}-{{ arch }}

      - run: npm install
      - save_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}
          paths:
            - ~/.cache/npm

      - save_cache:
          key: node-v1-{{ checksum "package.lock.json" }}-{{ arch }}
          paths:
            - node_modules

      # - run:
      #     name: jest tests
      #     command: |
      #       mkdir -p test-results/jest
      #       npm run test
      #     environment:
      #       JEST_JUNIT_OUTPUT: test-results/jest/junit.xml
    setupFastLane:
        executor:
          name: default
        steps:
          - checkout
          - run:
              name: Select Ruby Version
              command:  echo "ruby-2.4" > .ruby-version
          - restore_cache:
              keys:
              - m2-gems-{{ checksum "Gemfile.lock" }}
              - m2-gems-
          - run:
              name: Install Ruby Gems
              command: bundle check || bundle install --path vendor/bundle
              environment:
                BUNDLE_JOBS: 4
                BUNDLE_RETRY: 3
          - save_cache:
              key: m2-gems-{{ checksum "Gemfile.lock" }}
              paths:
                - vendor/bundle

      - persist_to_workspace:
          root: ~/demo-react-native
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  android:
    working_directory: ~/demo-react-native/android
    docker:
      - image: circleci/android:api-29-ndk
    steps:
      - checkout:
          path: ~/demo-react-native

      - attach_workspace:
          at: ~/demo-react-native

      - restore_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}

      - run: bundle install

      - save_cache:
          key: bundle-v1-{{ checksum "Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      # - run:
      #     name: fastlane tests
      #     command: |
      #       mkdir -p test-results/fastlane
      #       bundle exec fastlane test
      #       mv fastlane/report.xml test-results/fastlane

      - run:
          command: bundle exec fastlane deploy
          working_directory: android

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  ios:
    macos:
      xcode: "11.6"
    working_directory: ~/demo-react-native

    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail

    steps:
      - checkout

      - run:
          name: set Ruby version
          command:  echo "ruby-2.4" > ~/.ruby-version

      - restore_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}

      # not using a workspace here as Node and Yarn versions
      # differ between our macOS executor image and the Docker containers above
      - run: npm install

      - save_cache:
          key: npm-v1-{{ checksum "package.lock.json" }}-{{ arch }}
          paths:
            - ~/.cache/npm

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules

      - restore_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}

      - run:
          command: bundle install
          working_directory: ios

      - save_cache:
          key: bundle-v1-{{ checksum "ios/Gemfile.lock" }}-{{ arch }}
          paths:
            - vendor/bundle

      - run:
          command: bundle exec fastlane test
          working_directory: ios

      - run:
          name: set up test results
          working_directory: ios
          when: always
          command: |
            mkdir -p test-results/fastlane test-results/xcode
            mv fastlane/report.xml test-results/fastlane
            mv fastlane/test_output/report.junit test-results/xcode/junit.xml
      - store_test_results:
          path: ios/test-results

      - store_artifacts:
          path: ios/test-results

workflows:
  version: 2
  node-android-ios:
    jobs:
      - node
      - android:
          requires:
            - node
      # - ios:
      #     requires:
      #       - node